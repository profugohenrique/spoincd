# -*- coding: utf-8 -*-
"""INCDmetricas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ccwmfYjez3DpQxoCpRY7lqnQ0KGd_48u
"""

from sklearn.metrics import accuracy_score
import numpy as np

# Dados reais e previsões
y_real =      np.array([1, 0, 1, 1, 0, 0, 1, 0, 1, 0])
y_previsto =  np.array([1, 0, 1, 0, 0, 1, 1, 0, 1, 0])

# Cálculo manual
tp = np.sum((y_real == 1) & (y_previsto == 1))  # True Positives: 4
tn = np.sum((y_real == 0) & (y_previsto == 0))  # True Negatives: 3
fp = np.sum((y_real == 0) & (y_previsto == 1))  # False Positives: 1
fn = np.sum((y_real == 1) & (y_previsto == 0))  # False Negatives: 2

acuracia_manual = (tp + tn) / (tp + tn + fp + fn)  # (4+3)/(4+3+1+2) = 7/10 = 0.7

# Usando sklearn
acuracia_sklearn = accuracy_score(y_real, y_previsto)  # 0.7

print(f"Acurácia: {acuracia_sklearn:.2f} ou {acuracia_sklearn*100:.0f}%")

# Importando bibliotecas
from sklearn.metrics import confusion_matrix, recall_score, precision_score, f1_score, accuracy_score
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.datasets import make_classification

# Criando um dataset de exemplo
X, y = make_classification(n_samples=100, n_features=5, n_informative=3, n_redundant=0,
                           n_classes=2, random_state=42)

# Separando em treino e teste
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Treinando um modelo de regressão logística
model = LogisticRegression()
model.fit(X_train, y_train)

# Fazendo previsões
y_pred = model.predict(X_test)

# Matriz de confusão
cm = confusion_matrix(y_test, y_pred)
tn, fp, fn, tp = cm.ravel()
print("Matriz de Confusão:\n", cm)
print(f"TN={tn}, FP={fp}, FN={fn}, TP={tp}\n")

# Calculando métricas
recall = recall_score(y_test, y_pred)
precision = precision_score(y_test, y_pred)
f1 = f1_score(y_test, y_pred)
accuracy = accuracy_score(y_test, y_pred)

print(f"Recall (Sensibilidade) = {recall:.2f}")
print(f"Precision (Precisão) = {precision:.2f}")
print(f"F1-Score = {f1:.2f}")
print(f"Acurácia = {accuracy:.2f}")